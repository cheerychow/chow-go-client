// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// BaseNutritionAbbrev base nutrition abbrev
// swagger:model BaseNutritionAbbrev
type BaseNutritionAbbrev struct {

	// alpha carot
	AlphaCarot float32 `json:"alpha_carot,omitempty"`

	// ash
	Ash float32 `json:"ash,omitempty"`

	// beta carot
	BetaCarot float32 `json:"beta_carot,omitempty"`

	// beta crypt
	BetaCrypt float32 `json:"beta_crypt,omitempty"`

	// bioton
	Bioton float32 `json:"bioton,omitempty"`

	// calcium
	Calcium float32 `json:"calcium,omitempty"`

	// calories
	Calories float32 `json:"calories,omitempty"`

	// carbs
	Carbs float32 `json:"carbs,omitempty"`

	// chloride
	Chloride float32 `json:"chloride,omitempty"`

	// cholestrl
	Cholestrl float32 `json:"cholestrl,omitempty"`

	// choline
	Choline float32 `json:"choline,omitempty"`

	// choline tot
	CholineTot float32 `json:"choline_tot,omitempty"`

	// chromium
	Chromium float32 `json:"chromium,omitempty"`

	// copper
	Copper float32 `json:"copper,omitempty"`

	// fiber td
	FiberTd float32 `json:"fiber_td,omitempty"`

	// fluoride
	Fluoride float32 `json:"fluoride,omitempty"`

	// folate dfe
	FolateDfe float32 `json:"folate_dfe,omitempty"`

	// folate tot
	FolateTot float32 `json:"folate_tot,omitempty"`

	// folic acid
	FolicAcid float32 `json:"folic_acid,omitempty"`

	// food folate
	FoodFolate float32 `json:"food_folate,omitempty"`

	// food weight
	FoodWeight float32 `json:"food_weight,omitempty"`

	// iodine
	Iodine float32 `json:"iodine,omitempty"`

	// iron
	Iron float32 `json:"iron,omitempty"`

	// lut zea
	LutZea float32 `json:"lut_zea,omitempty"`

	// lycopene
	Lycopene float32 `json:"lycopene,omitempty"`

	// magnesium
	Magnesium float32 `json:"magnesium,omitempty"`

	// manganese
	Manganese float32 `json:"manganese,omitempty"`

	// molybdenum
	Molybdenum float32 `json:"molybdenum,omitempty"`

	// mono fat
	MonoFat float32 `json:"mono_fat,omitempty"`

	// phosphorus
	Phosphorus float32 `json:"phosphorus,omitempty"`

	// poly fat
	PolyFat float32 `json:"poly_fat,omitempty"`

	// potassium
	Potassium float32 `json:"potassium,omitempty"`

	// protein
	Protein float32 `json:"protein,omitempty"`

	// retinol
	Retinol float32 `json:"retinol,omitempty"`

	// sat fat
	SatFat float32 `json:"sat_fat,omitempty"`

	// selenium
	Selenium float32 `json:"selenium,omitempty"`

	// sodium
	Sodium float32 `json:"sodium,omitempty"`

	// The total amount of fat present.
	TotalFat float32 `json:"total_fat,omitempty"`

	// total sugar
	TotalSugar float32 `json:"total_sugar,omitempty"`

	// vit a iu
	VitAIu float32 `json:"vit_a_iu,omitempty"`

	// vit a rae
	VitARae float32 `json:"vit_a_rae,omitempty"`

	// vit b1
	VitB1 float32 `json:"vit_b1,omitempty"`

	// vit b12
	VitB12 float32 `json:"vit_b12,omitempty"`

	// vit b2
	VitB2 float32 `json:"vit_b2,omitempty"`

	// vit b3
	VitB3 float32 `json:"vit_b3,omitempty"`

	// vit b5
	VitB5 float32 `json:"vit_b5,omitempty"`

	// vit b6
	VitB6 float32 `json:"vit_b6,omitempty"`

	// vit c
	VitC float32 `json:"vit_c,omitempty"`

	// vit d iu
	VitDIu float32 `json:"vit_d_iu,omitempty"`

	// vit d mcg
	VitDMcg float32 `json:"vit_d_mcg,omitempty"`

	// vit e
	VitE float32 `json:"vit_e,omitempty"`

	// vit k
	VitK float32 `json:"vit_k,omitempty"`

	// water
	Water float32 `json:"water,omitempty"`

	// zinc
	Zinc float32 `json:"zinc,omitempty"`
}

// Validate validates this base nutrition abbrev
func (m *BaseNutritionAbbrev) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *BaseNutritionAbbrev) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *BaseNutritionAbbrev) UnmarshalBinary(b []byte) error {
	var res BaseNutritionAbbrev
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
