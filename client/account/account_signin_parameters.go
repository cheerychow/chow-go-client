// Code generated by go-swagger; DO NOT EDIT.

package account

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cheerychow/go-client/models"
)

// NewAccountSigninParams creates a new AccountSigninParams object
// with the default values initialized.
func NewAccountSigninParams() *AccountSigninParams {
	var ()
	return &AccountSigninParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewAccountSigninParamsWithTimeout creates a new AccountSigninParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewAccountSigninParamsWithTimeout(timeout time.Duration) *AccountSigninParams {
	var ()
	return &AccountSigninParams{

		timeout: timeout,
	}
}

// NewAccountSigninParamsWithContext creates a new AccountSigninParams object
// with the default values initialized, and the ability to set a context for a request
func NewAccountSigninParamsWithContext(ctx context.Context) *AccountSigninParams {
	var ()
	return &AccountSigninParams{

		Context: ctx,
	}
}

// NewAccountSigninParamsWithHTTPClient creates a new AccountSigninParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewAccountSigninParamsWithHTTPClient(client *http.Client) *AccountSigninParams {
	var ()
	return &AccountSigninParams{
		HTTPClient: client,
	}
}

/*AccountSigninParams contains all the parameters to send to the API endpoint
for the account signin operation typically these are written to a http.Request
*/
type AccountSigninParams struct {

	/*JSONBody
	  The username, must be unique and the password for the account.

	*/
	JSONBody *models.SigninObject

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the account signin params
func (o *AccountSigninParams) WithTimeout(timeout time.Duration) *AccountSigninParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the account signin params
func (o *AccountSigninParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the account signin params
func (o *AccountSigninParams) WithContext(ctx context.Context) *AccountSigninParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the account signin params
func (o *AccountSigninParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the account signin params
func (o *AccountSigninParams) WithHTTPClient(client *http.Client) *AccountSigninParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the account signin params
func (o *AccountSigninParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithJSONBody adds the jSONBody to the account signin params
func (o *AccountSigninParams) WithJSONBody(jSONBody *models.SigninObject) *AccountSigninParams {
	o.SetJSONBody(jSONBody)
	return o
}

// SetJSONBody adds the jsonBody to the account signin params
func (o *AccountSigninParams) SetJSONBody(jSONBody *models.SigninObject) {
	o.JSONBody = jSONBody
}

// WriteToRequest writes these params to a swagger request
func (o *AccountSigninParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.JSONBody != nil {
		if err := r.SetBodyParam(o.JSONBody); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
