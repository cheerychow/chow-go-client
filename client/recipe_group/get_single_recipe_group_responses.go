// Code generated by go-swagger; DO NOT EDIT.

package recipe_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cheerychow/go-client/models"
)

// GetSingleRecipeGroupReader is a Reader for the GetSingleRecipeGroup structure.
type GetSingleRecipeGroupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSingleRecipeGroupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetSingleRecipeGroupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetSingleRecipeGroupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetSingleRecipeGroupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetSingleRecipeGroupOK creates a GetSingleRecipeGroupOK with default headers values
func NewGetSingleRecipeGroupOK() *GetSingleRecipeGroupOK {
	return &GetSingleRecipeGroupOK{}
}

/*GetSingleRecipeGroupOK handles this case with default header values.

Description was not specified
*/
type GetSingleRecipeGroupOK struct {
	Payload *models.RecipeGroup
}

func (o *GetSingleRecipeGroupOK) Error() string {
	return fmt.Sprintf("[GET /recipe-group/{recipeGroupId}][%d] getSingleRecipeGroupOK  %+v", 200, o.Payload)
}

func (o *GetSingleRecipeGroupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RecipeGroup)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSingleRecipeGroupBadRequest creates a GetSingleRecipeGroupBadRequest with default headers values
func NewGetSingleRecipeGroupBadRequest() *GetSingleRecipeGroupBadRequest {
	return &GetSingleRecipeGroupBadRequest{}
}

/*GetSingleRecipeGroupBadRequest handles this case with default header values.

Description was not specified
*/
type GetSingleRecipeGroupBadRequest struct {
	Payload *models.HTTPAPIError
}

func (o *GetSingleRecipeGroupBadRequest) Error() string {
	return fmt.Sprintf("[GET /recipe-group/{recipeGroupId}][%d] getSingleRecipeGroupBadRequest  %+v", 400, o.Payload)
}

func (o *GetSingleRecipeGroupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSingleRecipeGroupNotFound creates a GetSingleRecipeGroupNotFound with default headers values
func NewGetSingleRecipeGroupNotFound() *GetSingleRecipeGroupNotFound {
	return &GetSingleRecipeGroupNotFound{}
}

/*GetSingleRecipeGroupNotFound handles this case with default header values.

Description was not specified
*/
type GetSingleRecipeGroupNotFound struct {
	Payload *models.HTTPAPIError
}

func (o *GetSingleRecipeGroupNotFound) Error() string {
	return fmt.Sprintf("[GET /recipe-group/{recipeGroupId}][%d] getSingleRecipeGroupNotFound  %+v", 404, o.Payload)
}

func (o *GetSingleRecipeGroupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
