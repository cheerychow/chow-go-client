// Code generated by go-swagger; DO NOT EDIT.

package recipe_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cheerychow/go-client/models"
)

// PostMenuItemReader is a Reader for the PostMenuItem structure.
type PostMenuItemReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostMenuItemReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostMenuItemOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostMenuItemBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPostMenuItemNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostMenuItemOK creates a PostMenuItemOK with default headers values
func NewPostMenuItemOK() *PostMenuItemOK {
	return &PostMenuItemOK{}
}

/*PostMenuItemOK handles this case with default header values.

Description was not specified
*/
type PostMenuItemOK struct {
	Payload *models.MenuItem
}

func (o *PostMenuItemOK) Error() string {
	return fmt.Sprintf("[POST /recipe-group/{recipeGroupId}/menu-items][%d] postMenuItemOK  %+v", 200, o.Payload)
}

func (o *PostMenuItemOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MenuItem)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostMenuItemBadRequest creates a PostMenuItemBadRequest with default headers values
func NewPostMenuItemBadRequest() *PostMenuItemBadRequest {
	return &PostMenuItemBadRequest{}
}

/*PostMenuItemBadRequest handles this case with default header values.

Description was not specified
*/
type PostMenuItemBadRequest struct {
	Payload *models.HTTPAPIError
}

func (o *PostMenuItemBadRequest) Error() string {
	return fmt.Sprintf("[POST /recipe-group/{recipeGroupId}/menu-items][%d] postMenuItemBadRequest  %+v", 400, o.Payload)
}

func (o *PostMenuItemBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostMenuItemNotFound creates a PostMenuItemNotFound with default headers values
func NewPostMenuItemNotFound() *PostMenuItemNotFound {
	return &PostMenuItemNotFound{}
}

/*PostMenuItemNotFound handles this case with default header values.

Recipe group not found
*/
type PostMenuItemNotFound struct {
	Payload *models.HTTPAPIError
}

func (o *PostMenuItemNotFound) Error() string {
	return fmt.Sprintf("[POST /recipe-group/{recipeGroupId}/menu-items][%d] postMenuItemNotFound  %+v", 404, o.Payload)
}

func (o *PostMenuItemNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
