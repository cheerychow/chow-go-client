// Code generated by go-swagger; DO NOT EDIT.

package recipe_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cheerychow/go-client/models"
)

// PostRecipeGroupReader is a Reader for the PostRecipeGroup structure.
type PostRecipeGroupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostRecipeGroupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostRecipeGroupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 201:
		result := NewPostRecipeGroupCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostRecipeGroupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPostRecipeGroupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostRecipeGroupOK creates a PostRecipeGroupOK with default headers values
func NewPostRecipeGroupOK() *PostRecipeGroupOK {
	return &PostRecipeGroupOK{}
}

/*PostRecipeGroupOK handles this case with default header values.

Description was not specified
*/
type PostRecipeGroupOK struct {
	Payload *models.RecipeGroup
}

func (o *PostRecipeGroupOK) Error() string {
	return fmt.Sprintf("[POST /recipe-group][%d] postRecipeGroupOK  %+v", 200, o.Payload)
}

func (o *PostRecipeGroupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RecipeGroup)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRecipeGroupCreated creates a PostRecipeGroupCreated with default headers values
func NewPostRecipeGroupCreated() *PostRecipeGroupCreated {
	return &PostRecipeGroupCreated{}
}

/*PostRecipeGroupCreated handles this case with default header values.

Description was not specified
*/
type PostRecipeGroupCreated struct {
	Payload *models.RecipeGroup
}

func (o *PostRecipeGroupCreated) Error() string {
	return fmt.Sprintf("[POST /recipe-group][%d] postRecipeGroupCreated  %+v", 201, o.Payload)
}

func (o *PostRecipeGroupCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RecipeGroup)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRecipeGroupBadRequest creates a PostRecipeGroupBadRequest with default headers values
func NewPostRecipeGroupBadRequest() *PostRecipeGroupBadRequest {
	return &PostRecipeGroupBadRequest{}
}

/*PostRecipeGroupBadRequest handles this case with default header values.

Description was not specified
*/
type PostRecipeGroupBadRequest struct {
	Payload *models.HTTPAPIError
}

func (o *PostRecipeGroupBadRequest) Error() string {
	return fmt.Sprintf("[POST /recipe-group][%d] postRecipeGroupBadRequest  %+v", 400, o.Payload)
}

func (o *PostRecipeGroupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostRecipeGroupNotFound creates a PostRecipeGroupNotFound with default headers values
func NewPostRecipeGroupNotFound() *PostRecipeGroupNotFound {
	return &PostRecipeGroupNotFound{}
}

/*PostRecipeGroupNotFound handles this case with default header values.

Description was not specified
*/
type PostRecipeGroupNotFound struct {
	Payload *models.HTTPAPIError
}

func (o *PostRecipeGroupNotFound) Error() string {
	return fmt.Sprintf("[POST /recipe-group][%d] postRecipeGroupNotFound  %+v", 404, o.Payload)
}

func (o *PostRecipeGroupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
