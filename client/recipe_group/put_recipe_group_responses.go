// Code generated by go-swagger; DO NOT EDIT.

package recipe_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cheerychow/chow-go-client/models"
)

// PutRecipeGroupReader is a Reader for the PutRecipeGroup structure.
type PutRecipeGroupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutRecipeGroupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPutRecipeGroupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPutRecipeGroupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPutRecipeGroupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutRecipeGroupOK creates a PutRecipeGroupOK with default headers values
func NewPutRecipeGroupOK() *PutRecipeGroupOK {
	return &PutRecipeGroupOK{}
}

/*PutRecipeGroupOK handles this case with default header values.

Description was not specified
*/
type PutRecipeGroupOK struct {
	Payload *models.RecipeGroup
}

func (o *PutRecipeGroupOK) Error() string {
	return fmt.Sprintf("[PUT /recipe-group/{recipeGroupId}][%d] putRecipeGroupOK  %+v", 200, o.Payload)
}

func (o *PutRecipeGroupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RecipeGroup)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutRecipeGroupBadRequest creates a PutRecipeGroupBadRequest with default headers values
func NewPutRecipeGroupBadRequest() *PutRecipeGroupBadRequest {
	return &PutRecipeGroupBadRequest{}
}

/*PutRecipeGroupBadRequest handles this case with default header values.

Description was not specified
*/
type PutRecipeGroupBadRequest struct {
	Payload *models.HTTPAPIError
}

func (o *PutRecipeGroupBadRequest) Error() string {
	return fmt.Sprintf("[PUT /recipe-group/{recipeGroupId}][%d] putRecipeGroupBadRequest  %+v", 400, o.Payload)
}

func (o *PutRecipeGroupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutRecipeGroupNotFound creates a PutRecipeGroupNotFound with default headers values
func NewPutRecipeGroupNotFound() *PutRecipeGroupNotFound {
	return &PutRecipeGroupNotFound{}
}

/*PutRecipeGroupNotFound handles this case with default header values.

Description was not specified
*/
type PutRecipeGroupNotFound struct {
	Payload *models.HTTPAPIError
}

func (o *PutRecipeGroupNotFound) Error() string {
	return fmt.Sprintf("[PUT /recipe-group/{recipeGroupId}][%d] putRecipeGroupNotFound  %+v", 404, o.Payload)
}

func (o *PutRecipeGroupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
