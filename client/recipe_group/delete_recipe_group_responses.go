// Code generated by go-swagger; DO NOT EDIT.

package recipe_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cheerychow/chow-go-client/models"
)

// DeleteRecipeGroupReader is a Reader for the DeleteRecipeGroup structure.
type DeleteRecipeGroupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteRecipeGroupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeleteRecipeGroupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewDeleteRecipeGroupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewDeleteRecipeGroupForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeleteRecipeGroupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteRecipeGroupOK creates a DeleteRecipeGroupOK with default headers values
func NewDeleteRecipeGroupOK() *DeleteRecipeGroupOK {
	return &DeleteRecipeGroupOK{}
}

/*DeleteRecipeGroupOK handles this case with default header values.

Description was not specified
*/
type DeleteRecipeGroupOK struct {
	Payload *models.RecipeGroup
}

func (o *DeleteRecipeGroupOK) Error() string {
	return fmt.Sprintf("[DELETE /recipe-group/{recipeGroupId}][%d] deleteRecipeGroupOK  %+v", 200, o.Payload)
}

func (o *DeleteRecipeGroupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RecipeGroup)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRecipeGroupBadRequest creates a DeleteRecipeGroupBadRequest with default headers values
func NewDeleteRecipeGroupBadRequest() *DeleteRecipeGroupBadRequest {
	return &DeleteRecipeGroupBadRequest{}
}

/*DeleteRecipeGroupBadRequest handles this case with default header values.

Description was not specified
*/
type DeleteRecipeGroupBadRequest struct {
	Payload *models.HTTPAPIError
}

func (o *DeleteRecipeGroupBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /recipe-group/{recipeGroupId}][%d] deleteRecipeGroupBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteRecipeGroupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRecipeGroupForbidden creates a DeleteRecipeGroupForbidden with default headers values
func NewDeleteRecipeGroupForbidden() *DeleteRecipeGroupForbidden {
	return &DeleteRecipeGroupForbidden{}
}

/*DeleteRecipeGroupForbidden handles this case with default header values.

You're not the group owner.
*/
type DeleteRecipeGroupForbidden struct {
	Payload *models.HTTPAPIError
}

func (o *DeleteRecipeGroupForbidden) Error() string {
	return fmt.Sprintf("[DELETE /recipe-group/{recipeGroupId}][%d] deleteRecipeGroupForbidden  %+v", 403, o.Payload)
}

func (o *DeleteRecipeGroupForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRecipeGroupNotFound creates a DeleteRecipeGroupNotFound with default headers values
func NewDeleteRecipeGroupNotFound() *DeleteRecipeGroupNotFound {
	return &DeleteRecipeGroupNotFound{}
}

/*DeleteRecipeGroupNotFound handles this case with default header values.

You're not the group owner.
*/
type DeleteRecipeGroupNotFound struct {
	Payload *models.HTTPAPIError
}

func (o *DeleteRecipeGroupNotFound) Error() string {
	return fmt.Sprintf("[DELETE /recipe-group/{recipeGroupId}][%d] deleteRecipeGroupNotFound  %+v", 404, o.Payload)
}

func (o *DeleteRecipeGroupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
