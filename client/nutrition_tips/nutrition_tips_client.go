// Code generated by go-swagger; DO NOT EDIT.

package nutrition_tips

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new nutrition tips API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for nutrition tips API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
GetNutritionTipsLabelFromPlainIngredientsHTML gets the HTML source for a nutrition tips panel that can be embedded into a web page
*/
func (a *Client) GetNutritionTipsLabelFromPlainIngredientsHTML(params *GetNutritionTipsLabelFromPlainIngredientsHTMLParams) (*GetNutritionTipsLabelFromPlainIngredientsHTMLOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetNutritionTipsLabelFromPlainIngredientsHTMLParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetNutritionTipsLabelFromPlainIngredientsHtml",
		Method:             "POST",
		PathPattern:        "/parse/nutrition-tips-label/html",
		ProducesMediaTypes: []string{"text/html"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetNutritionTipsLabelFromPlainIngredientsHTMLReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*GetNutritionTipsLabelFromPlainIngredientsHTMLOK), nil

}

/*
GetNutritionTipsLabelHTML gets HTML source which draws a nutrition tips panel for embedding into a webpage
*/
func (a *Client) GetNutritionTipsLabelHTML(params *GetNutritionTipsLabelHTMLParams) (*GetNutritionTipsLabelHTMLOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetNutritionTipsLabelHTMLParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetNutritionTipsLabelHtml",
		Method:             "GET",
		PathPattern:        "/recipe/{recipeId}/nutrition-tips-label/html",
		ProducesMediaTypes: []string{"text/html"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetNutritionTipsLabelHTMLReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*GetNutritionTipsLabelHTMLOK), nil

}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
