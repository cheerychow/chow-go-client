// Code generated by go-swagger; DO NOT EDIT.

package recipe

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetNutritionLabelHTMLStaticSnippetReader is a Reader for the GetNutritionLabelHTMLStaticSnippet structure.
type GetNutritionLabelHTMLStaticSnippetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNutritionLabelHTMLStaticSnippetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetNutritionLabelHTMLStaticSnippetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetNutritionLabelHTMLStaticSnippetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetNutritionLabelHTMLStaticSnippetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetNutritionLabelHTMLStaticSnippetOK creates a GetNutritionLabelHTMLStaticSnippetOK with default headers values
func NewGetNutritionLabelHTMLStaticSnippetOK() *GetNutritionLabelHTMLStaticSnippetOK {
	return &GetNutritionLabelHTMLStaticSnippetOK{}
}

/*GetNutritionLabelHTMLStaticSnippetOK handles this case with default header values.

Description was not specified
*/
type GetNutritionLabelHTMLStaticSnippetOK struct {
	Payload string
}

func (o *GetNutritionLabelHTMLStaticSnippetOK) Error() string {
	return fmt.Sprintf("[GET /recipe/{recipeId}/nutrition-label/static-snippet][%d] getNutritionLabelHtmlStaticSnippetOK  %+v", 200, o.Payload)
}

func (o *GetNutritionLabelHTMLStaticSnippetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNutritionLabelHTMLStaticSnippetBadRequest creates a GetNutritionLabelHTMLStaticSnippetBadRequest with default headers values
func NewGetNutritionLabelHTMLStaticSnippetBadRequest() *GetNutritionLabelHTMLStaticSnippetBadRequest {
	return &GetNutritionLabelHTMLStaticSnippetBadRequest{}
}

/*GetNutritionLabelHTMLStaticSnippetBadRequest handles this case with default header values.

Description was not specified
*/
type GetNutritionLabelHTMLStaticSnippetBadRequest struct {
	Payload string
}

func (o *GetNutritionLabelHTMLStaticSnippetBadRequest) Error() string {
	return fmt.Sprintf("[GET /recipe/{recipeId}/nutrition-label/static-snippet][%d] getNutritionLabelHtmlStaticSnippetBadRequest  %+v", 400, o.Payload)
}

func (o *GetNutritionLabelHTMLStaticSnippetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNutritionLabelHTMLStaticSnippetNotFound creates a GetNutritionLabelHTMLStaticSnippetNotFound with default headers values
func NewGetNutritionLabelHTMLStaticSnippetNotFound() *GetNutritionLabelHTMLStaticSnippetNotFound {
	return &GetNutritionLabelHTMLStaticSnippetNotFound{}
}

/*GetNutritionLabelHTMLStaticSnippetNotFound handles this case with default header values.

Description was not specified
*/
type GetNutritionLabelHTMLStaticSnippetNotFound struct {
	Payload string
}

func (o *GetNutritionLabelHTMLStaticSnippetNotFound) Error() string {
	return fmt.Sprintf("[GET /recipe/{recipeId}/nutrition-label/static-snippet][%d] getNutritionLabelHtmlStaticSnippetNotFound  %+v", 404, o.Payload)
}

func (o *GetNutritionLabelHTMLStaticSnippetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
