// Code generated by go-swagger; DO NOT EDIT.

package recipe

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cheerychow/chow-go-client/models"
)

// EditIngredientForRecipeReader is a Reader for the EditIngredientForRecipe structure.
type EditIngredientForRecipeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *EditIngredientForRecipeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewEditIngredientForRecipeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewEditIngredientForRecipeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewEditIngredientForRecipeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewEditIngredientForRecipeOK creates a EditIngredientForRecipeOK with default headers values
func NewEditIngredientForRecipeOK() *EditIngredientForRecipeOK {
	return &EditIngredientForRecipeOK{}
}

/*EditIngredientForRecipeOK handles this case with default header values.

Description was not specified
*/
type EditIngredientForRecipeOK struct {
	Payload []*models.Ingredient
}

func (o *EditIngredientForRecipeOK) Error() string {
	return fmt.Sprintf("[PUT /recipe/{recipeId}/ingredient][%d] editIngredientForRecipeOK  %+v", 200, o.Payload)
}

func (o *EditIngredientForRecipeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEditIngredientForRecipeBadRequest creates a EditIngredientForRecipeBadRequest with default headers values
func NewEditIngredientForRecipeBadRequest() *EditIngredientForRecipeBadRequest {
	return &EditIngredientForRecipeBadRequest{}
}

/*EditIngredientForRecipeBadRequest handles this case with default header values.

Description was not specified
*/
type EditIngredientForRecipeBadRequest struct {
	Payload *models.HTTPAPIError
}

func (o *EditIngredientForRecipeBadRequest) Error() string {
	return fmt.Sprintf("[PUT /recipe/{recipeId}/ingredient][%d] editIngredientForRecipeBadRequest  %+v", 400, o.Payload)
}

func (o *EditIngredientForRecipeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEditIngredientForRecipeNotFound creates a EditIngredientForRecipeNotFound with default headers values
func NewEditIngredientForRecipeNotFound() *EditIngredientForRecipeNotFound {
	return &EditIngredientForRecipeNotFound{}
}

/*EditIngredientForRecipeNotFound handles this case with default header values.

Description was not specified
*/
type EditIngredientForRecipeNotFound struct {
	Payload *models.HTTPAPIError
}

func (o *EditIngredientForRecipeNotFound) Error() string {
	return fmt.Sprintf("[PUT /recipe/{recipeId}/ingredient][%d] editIngredientForRecipeNotFound  %+v", 404, o.Payload)
}

func (o *EditIngredientForRecipeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
