// Code generated by go-swagger; DO NOT EDIT.

package recipe

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cheerychow/chow-go-client/models"
)

// GetRecipeFoodNamesReader is a Reader for the GetRecipeFoodNames structure.
type GetRecipeFoodNamesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRecipeFoodNamesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetRecipeFoodNamesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetRecipeFoodNamesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetRecipeFoodNamesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetRecipeFoodNamesOK creates a GetRecipeFoodNamesOK with default headers values
func NewGetRecipeFoodNamesOK() *GetRecipeFoodNamesOK {
	return &GetRecipeFoodNamesOK{}
}

/*GetRecipeFoodNamesOK handles this case with default header values.

Description was not specified
*/
type GetRecipeFoodNamesOK struct {
	Payload []*models.FoodWithID
}

func (o *GetRecipeFoodNamesOK) Error() string {
	return fmt.Sprintf("[GET /recipe/{recipeId}/food][%d] getRecipeFoodNamesOK  %+v", 200, o.Payload)
}

func (o *GetRecipeFoodNamesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecipeFoodNamesBadRequest creates a GetRecipeFoodNamesBadRequest with default headers values
func NewGetRecipeFoodNamesBadRequest() *GetRecipeFoodNamesBadRequest {
	return &GetRecipeFoodNamesBadRequest{}
}

/*GetRecipeFoodNamesBadRequest handles this case with default header values.

Malformed recipe id
*/
type GetRecipeFoodNamesBadRequest struct {
	Payload *models.HTTPAPIError
}

func (o *GetRecipeFoodNamesBadRequest) Error() string {
	return fmt.Sprintf("[GET /recipe/{recipeId}/food][%d] getRecipeFoodNamesBadRequest  %+v", 400, o.Payload)
}

func (o *GetRecipeFoodNamesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRecipeFoodNamesNotFound creates a GetRecipeFoodNamesNotFound with default headers values
func NewGetRecipeFoodNamesNotFound() *GetRecipeFoodNamesNotFound {
	return &GetRecipeFoodNamesNotFound{}
}

/*GetRecipeFoodNamesNotFound handles this case with default header values.

Recipe doesn't exist.
*/
type GetRecipeFoodNamesNotFound struct {
	Payload *models.HTTPAPIError
}

func (o *GetRecipeFoodNamesNotFound) Error() string {
	return fmt.Sprintf("[GET /recipe/{recipeId}/food][%d] getRecipeFoodNamesNotFound  %+v", 404, o.Payload)
}

func (o *GetRecipeFoodNamesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
