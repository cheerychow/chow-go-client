// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cheerychow/go-client/models"
)

// GetSpecificUserMetaInfoReader is a Reader for the GetSpecificUserMetaInfo structure.
type GetSpecificUserMetaInfoReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSpecificUserMetaInfoReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetSpecificUserMetaInfoOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetSpecificUserMetaInfoBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetSpecificUserMetaInfoOK creates a GetSpecificUserMetaInfoOK with default headers values
func NewGetSpecificUserMetaInfoOK() *GetSpecificUserMetaInfoOK {
	return &GetSpecificUserMetaInfoOK{}
}

/*GetSpecificUserMetaInfoOK handles this case with default header values.

Description was not specified
*/
type GetSpecificUserMetaInfoOK struct {
	Payload []*models.UserMeta
}

func (o *GetSpecificUserMetaInfoOK) Error() string {
	return fmt.Sprintf("[GET /user-meta-fields/{fields}][%d] getSpecificUserMetaInfoOK  %+v", 200, o.Payload)
}

func (o *GetSpecificUserMetaInfoOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpecificUserMetaInfoBadRequest creates a GetSpecificUserMetaInfoBadRequest with default headers values
func NewGetSpecificUserMetaInfoBadRequest() *GetSpecificUserMetaInfoBadRequest {
	return &GetSpecificUserMetaInfoBadRequest{}
}

/*GetSpecificUserMetaInfoBadRequest handles this case with default header values.

Description was not specified
*/
type GetSpecificUserMetaInfoBadRequest struct {
	Payload *models.HTTPAPIError
}

func (o *GetSpecificUserMetaInfoBadRequest) Error() string {
	return fmt.Sprintf("[GET /user-meta-fields/{fields}][%d] getSpecificUserMetaInfoBadRequest  %+v", 400, o.Payload)
}

func (o *GetSpecificUserMetaInfoBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
