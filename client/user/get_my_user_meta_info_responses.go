// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cheerychow/go-client/models"
)

// GetMyUserMetaInfoReader is a Reader for the GetMyUserMetaInfo structure.
type GetMyUserMetaInfoReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetMyUserMetaInfoReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetMyUserMetaInfoOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetMyUserMetaInfoBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetMyUserMetaInfoOK creates a GetMyUserMetaInfoOK with default headers values
func NewGetMyUserMetaInfoOK() *GetMyUserMetaInfoOK {
	return &GetMyUserMetaInfoOK{}
}

/*GetMyUserMetaInfoOK handles this case with default header values.

Description was not specified
*/
type GetMyUserMetaInfoOK struct {
	Payload []*models.UserMeta
}

func (o *GetMyUserMetaInfoOK) Error() string {
	return fmt.Sprintf("[GET /user-meta][%d] getMyUserMetaInfoOK  %+v", 200, o.Payload)
}

func (o *GetMyUserMetaInfoOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMyUserMetaInfoBadRequest creates a GetMyUserMetaInfoBadRequest with default headers values
func NewGetMyUserMetaInfoBadRequest() *GetMyUserMetaInfoBadRequest {
	return &GetMyUserMetaInfoBadRequest{}
}

/*GetMyUserMetaInfoBadRequest handles this case with default header values.

Description was not specified
*/
type GetMyUserMetaInfoBadRequest struct {
	Payload *models.HTTPAPIError
}

func (o *GetMyUserMetaInfoBadRequest) Error() string {
	return fmt.Sprintf("[GET /user-meta][%d] getMyUserMetaInfoBadRequest  %+v", 400, o.Payload)
}

func (o *GetMyUserMetaInfoBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
