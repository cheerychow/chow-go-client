// Code generated by go-swagger; DO NOT EDIT.

package scratch_recipe

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cheerychow/chow-go-client/models"
)

// GetNutritionForSpecificScratchRecipeReader is a Reader for the GetNutritionForSpecificScratchRecipe structure.
type GetNutritionForSpecificScratchRecipeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNutritionForSpecificScratchRecipeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetNutritionForSpecificScratchRecipeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetNutritionForSpecificScratchRecipeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetNutritionForSpecificScratchRecipeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetNutritionForSpecificScratchRecipeOK creates a GetNutritionForSpecificScratchRecipeOK with default headers values
func NewGetNutritionForSpecificScratchRecipeOK() *GetNutritionForSpecificScratchRecipeOK {
	return &GetNutritionForSpecificScratchRecipeOK{}
}

/*GetNutritionForSpecificScratchRecipeOK handles this case with default header values.

Fetch a recipe from the scratch pad, and include the recipe's total nutrition.
*/
type GetNutritionForSpecificScratchRecipeOK struct {
	Payload *models.Recipe
}

func (o *GetNutritionForSpecificScratchRecipeOK) Error() string {
	return fmt.Sprintf("[GET /scratch-recipe/{recipeId}/nutrition][%d] getNutritionForSpecificScratchRecipeOK  %+v", 200, o.Payload)
}

func (o *GetNutritionForSpecificScratchRecipeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Recipe)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNutritionForSpecificScratchRecipeBadRequest creates a GetNutritionForSpecificScratchRecipeBadRequest with default headers values
func NewGetNutritionForSpecificScratchRecipeBadRequest() *GetNutritionForSpecificScratchRecipeBadRequest {
	return &GetNutritionForSpecificScratchRecipeBadRequest{}
}

/*GetNutritionForSpecificScratchRecipeBadRequest handles this case with default header values.

Malformed JSON (this endpoint requires an array of strings
*/
type GetNutritionForSpecificScratchRecipeBadRequest struct {
	Payload *models.HTTPAPIError
}

func (o *GetNutritionForSpecificScratchRecipeBadRequest) Error() string {
	return fmt.Sprintf("[GET /scratch-recipe/{recipeId}/nutrition][%d] getNutritionForSpecificScratchRecipeBadRequest  %+v", 400, o.Payload)
}

func (o *GetNutritionForSpecificScratchRecipeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNutritionForSpecificScratchRecipeForbidden creates a GetNutritionForSpecificScratchRecipeForbidden with default headers values
func NewGetNutritionForSpecificScratchRecipeForbidden() *GetNutritionForSpecificScratchRecipeForbidden {
	return &GetNutritionForSpecificScratchRecipeForbidden{}
}

/*GetNutritionForSpecificScratchRecipeForbidden handles this case with default header values.

Description was not specified
*/
type GetNutritionForSpecificScratchRecipeForbidden struct {
	Payload *models.HTTPAPIError
}

func (o *GetNutritionForSpecificScratchRecipeForbidden) Error() string {
	return fmt.Sprintf("[GET /scratch-recipe/{recipeId}/nutrition][%d] getNutritionForSpecificScratchRecipeForbidden  %+v", 403, o.Payload)
}

func (o *GetNutritionForSpecificScratchRecipeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
