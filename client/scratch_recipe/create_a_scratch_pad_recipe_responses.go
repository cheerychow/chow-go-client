// Code generated by go-swagger; DO NOT EDIT.

package scratch_recipe

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cheerychow/chow-go-client/models"
)

// CreateAScratchPadRecipeReader is a Reader for the CreateAScratchPadRecipe structure.
type CreateAScratchPadRecipeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateAScratchPadRecipeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewCreateAScratchPadRecipeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewCreateAScratchPadRecipeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewCreateAScratchPadRecipeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateAScratchPadRecipeOK creates a CreateAScratchPadRecipeOK with default headers values
func NewCreateAScratchPadRecipeOK() *CreateAScratchPadRecipeOK {
	return &CreateAScratchPadRecipeOK{}
}

/*CreateAScratchPadRecipeOK handles this case with default header values.

Retreives a list of ingredients, including the nutritional content of the ingredient
*/
type CreateAScratchPadRecipeOK struct {
	Payload *models.Recipe
}

func (o *CreateAScratchPadRecipeOK) Error() string {
	return fmt.Sprintf("[POST /scratch-recipe][%d] createAScratchPadRecipeOK  %+v", 200, o.Payload)
}

func (o *CreateAScratchPadRecipeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Recipe)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAScratchPadRecipeBadRequest creates a CreateAScratchPadRecipeBadRequest with default headers values
func NewCreateAScratchPadRecipeBadRequest() *CreateAScratchPadRecipeBadRequest {
	return &CreateAScratchPadRecipeBadRequest{}
}

/*CreateAScratchPadRecipeBadRequest handles this case with default header values.

Malformed JSON (this endpoint requires an array of strings
*/
type CreateAScratchPadRecipeBadRequest struct {
	Payload *models.HTTPAPIError
}

func (o *CreateAScratchPadRecipeBadRequest) Error() string {
	return fmt.Sprintf("[POST /scratch-recipe][%d] createAScratchPadRecipeBadRequest  %+v", 400, o.Payload)
}

func (o *CreateAScratchPadRecipeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAScratchPadRecipeForbidden creates a CreateAScratchPadRecipeForbidden with default headers values
func NewCreateAScratchPadRecipeForbidden() *CreateAScratchPadRecipeForbidden {
	return &CreateAScratchPadRecipeForbidden{}
}

/*CreateAScratchPadRecipeForbidden handles this case with default header values.

Description was not specified
*/
type CreateAScratchPadRecipeForbidden struct {
	Payload *models.HTTPAPIError
}

func (o *CreateAScratchPadRecipeForbidden) Error() string {
	return fmt.Sprintf("[POST /scratch-recipe][%d] createAScratchPadRecipeForbidden  %+v", 403, o.Payload)
}

func (o *CreateAScratchPadRecipeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
