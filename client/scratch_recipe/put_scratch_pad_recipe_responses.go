// Code generated by go-swagger; DO NOT EDIT.

package scratch_recipe

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cheerychow/chow-go-client/models"
)

// PutScratchPadRecipeReader is a Reader for the PutScratchPadRecipe structure.
type PutScratchPadRecipeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutScratchPadRecipeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPutScratchPadRecipeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPutScratchPadRecipeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutScratchPadRecipeOK creates a PutScratchPadRecipeOK with default headers values
func NewPutScratchPadRecipeOK() *PutScratchPadRecipeOK {
	return &PutScratchPadRecipeOK{}
}

/*PutScratchPadRecipeOK handles this case with default header values.

The recipe object with your changes.
*/
type PutScratchPadRecipeOK struct {
	Payload *models.Recipe
}

func (o *PutScratchPadRecipeOK) Error() string {
	return fmt.Sprintf("[POST /scratch-recipe/{recipeId}][%d] putScratchPadRecipeOK  %+v", 200, o.Payload)
}

func (o *PutScratchPadRecipeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Recipe)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutScratchPadRecipeBadRequest creates a PutScratchPadRecipeBadRequest with default headers values
func NewPutScratchPadRecipeBadRequest() *PutScratchPadRecipeBadRequest {
	return &PutScratchPadRecipeBadRequest{}
}

/*PutScratchPadRecipeBadRequest handles this case with default header values.

Malformed JSON (this endpoint requires an array of strings
*/
type PutScratchPadRecipeBadRequest struct {
	Payload *models.HTTPAPIError
}

func (o *PutScratchPadRecipeBadRequest) Error() string {
	return fmt.Sprintf("[POST /scratch-recipe/{recipeId}][%d] putScratchPadRecipeBadRequest  %+v", 400, o.Payload)
}

func (o *PutScratchPadRecipeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
