// Code generated by go-swagger; DO NOT EDIT.

package food

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cheerychow/go-client/models"
)

// SearchAvailableIngredientReader is a Reader for the SearchAvailableIngredient structure.
type SearchAvailableIngredientReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchAvailableIngredientReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewSearchAvailableIngredientOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewSearchAvailableIngredientBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewSearchAvailableIngredientOK creates a SearchAvailableIngredientOK with default headers values
func NewSearchAvailableIngredientOK() *SearchAvailableIngredientOK {
	return &SearchAvailableIngredientOK{}
}

/*SearchAvailableIngredientOK handles this case with default header values.

Description was not specified
*/
type SearchAvailableIngredientOK struct {
	Payload []*models.IngredientFood
}

func (o *SearchAvailableIngredientOK) Error() string {
	return fmt.Sprintf("[GET /food/ingredients][%d] searchAvailableIngredientOK  %+v", 200, o.Payload)
}

func (o *SearchAvailableIngredientOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchAvailableIngredientBadRequest creates a SearchAvailableIngredientBadRequest with default headers values
func NewSearchAvailableIngredientBadRequest() *SearchAvailableIngredientBadRequest {
	return &SearchAvailableIngredientBadRequest{}
}

/*SearchAvailableIngredientBadRequest handles this case with default header values.

Description was not specified
*/
type SearchAvailableIngredientBadRequest struct {
	Payload *models.HTTPAPIError
}

func (o *SearchAvailableIngredientBadRequest) Error() string {
	return fmt.Sprintf("[GET /food/ingredients][%d] searchAvailableIngredientBadRequest  %+v", 400, o.Payload)
}

func (o *SearchAvailableIngredientBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
