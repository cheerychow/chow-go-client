// Code generated by go-swagger; DO NOT EDIT.

package food

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewShowFoodsContainingParams creates a new ShowFoodsContainingParams object
// with the default values initialized.
func NewShowFoodsContainingParams() *ShowFoodsContainingParams {
	var ()
	return &ShowFoodsContainingParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewShowFoodsContainingParamsWithTimeout creates a new ShowFoodsContainingParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewShowFoodsContainingParamsWithTimeout(timeout time.Duration) *ShowFoodsContainingParams {
	var ()
	return &ShowFoodsContainingParams{

		timeout: timeout,
	}
}

// NewShowFoodsContainingParamsWithContext creates a new ShowFoodsContainingParams object
// with the default values initialized, and the ability to set a context for a request
func NewShowFoodsContainingParamsWithContext(ctx context.Context) *ShowFoodsContainingParams {
	var ()
	return &ShowFoodsContainingParams{

		Context: ctx,
	}
}

// NewShowFoodsContainingParamsWithHTTPClient creates a new ShowFoodsContainingParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewShowFoodsContainingParamsWithHTTPClient(client *http.Client) *ShowFoodsContainingParams {
	var ()
	return &ShowFoodsContainingParams{
		HTTPClient: client,
	}
}

/*ShowFoodsContainingParams contains all the parameters to send to the API endpoint
for the show foods containing operation typically these are written to a http.Request
*/
type ShowFoodsContainingParams struct {

	/*Search
	  Food ID

	*/
	Search string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the show foods containing params
func (o *ShowFoodsContainingParams) WithTimeout(timeout time.Duration) *ShowFoodsContainingParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the show foods containing params
func (o *ShowFoodsContainingParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the show foods containing params
func (o *ShowFoodsContainingParams) WithContext(ctx context.Context) *ShowFoodsContainingParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the show foods containing params
func (o *ShowFoodsContainingParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the show foods containing params
func (o *ShowFoodsContainingParams) WithHTTPClient(client *http.Client) *ShowFoodsContainingParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the show foods containing params
func (o *ShowFoodsContainingParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithSearch adds the search to the show foods containing params
func (o *ShowFoodsContainingParams) WithSearch(search string) *ShowFoodsContainingParams {
	o.SetSearch(search)
	return o
}

// SetSearch adds the search to the show foods containing params
func (o *ShowFoodsContainingParams) SetSearch(search string) {
	o.Search = search
}

// WriteToRequest writes these params to a swagger request
func (o *ShowFoodsContainingParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param search
	if err := r.SetPathParam("search", o.Search); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
