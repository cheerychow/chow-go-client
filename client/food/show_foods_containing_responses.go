// Code generated by go-swagger; DO NOT EDIT.

package food

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cheerychow/go-client/models"
)

// ShowFoodsContainingReader is a Reader for the ShowFoodsContaining structure.
type ShowFoodsContainingReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ShowFoodsContainingReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewShowFoodsContainingOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewShowFoodsContainingBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewShowFoodsContainingOK creates a ShowFoodsContainingOK with default headers values
func NewShowFoodsContainingOK() *ShowFoodsContainingOK {
	return &ShowFoodsContainingOK{}
}

/*ShowFoodsContainingOK handles this case with default header values.

Description was not specified
*/
type ShowFoodsContainingOK struct {
	Payload map[string]string
}

func (o *ShowFoodsContainingOK) Error() string {
	return fmt.Sprintf("[GET /autocomplete-foods/{search}][%d] showFoodsContainingOK  %+v", 200, o.Payload)
}

func (o *ShowFoodsContainingOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewShowFoodsContainingBadRequest creates a ShowFoodsContainingBadRequest with default headers values
func NewShowFoodsContainingBadRequest() *ShowFoodsContainingBadRequest {
	return &ShowFoodsContainingBadRequest{}
}

/*ShowFoodsContainingBadRequest handles this case with default header values.

Description was not specified
*/
type ShowFoodsContainingBadRequest struct {
	Payload *models.HTTPAPIError
}

func (o *ShowFoodsContainingBadRequest) Error() string {
	return fmt.Sprintf("[GET /autocomplete-foods/{search}][%d] showFoodsContainingBadRequest  %+v", 400, o.Payload)
}

func (o *ShowFoodsContainingBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
