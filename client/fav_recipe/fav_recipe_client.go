// Code generated by go-swagger; DO NOT EDIT.

package fav_recipe

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new fav recipe API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for fav recipe API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
FavoriteARecipe favorites a recipe
*/
func (a *Client) FavoriteARecipe(params *FavoriteARecipeParams, authInfo runtime.ClientAuthInfoWriter) (*FavoriteARecipeCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewFavoriteARecipeParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "FavoriteARecipe",
		Method:             "POST",
		PathPattern:        "/fav-recipe",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &FavoriteARecipeReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*FavoriteARecipeCreated), nil

}

/*
FavoriteRecipes lists the logged in user s fav recipes
*/
func (a *Client) FavoriteRecipes(params *FavoriteRecipesParams, authInfo runtime.ClientAuthInfoWriter) (*FavoriteRecipesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewFavoriteRecipesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "FavoriteRecipes",
		Method:             "GET",
		PathPattern:        "/fav-recipe",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &FavoriteRecipesReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*FavoriteRecipesOK), nil

}

/*
UnfavoriteARecipeByID removes a favorite recipe entry into the database for a particular recipe
*/
func (a *Client) UnfavoriteARecipeByID(params *UnfavoriteARecipeByIDParams, authInfo runtime.ClientAuthInfoWriter) (*UnfavoriteARecipeByIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewUnfavoriteARecipeByIDParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "UnfavoriteARecipeByID",
		Method:             "DELETE",
		PathPattern:        "/fav-recipe/by-id/{fav-recipeId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &UnfavoriteARecipeByIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*UnfavoriteARecipeByIDOK), nil

}

/*
UnfavoriteARecipeByRecipeID removes a favorite recipe entry into the database for a particular recipe
*/
func (a *Client) UnfavoriteARecipeByRecipeID(params *UnfavoriteARecipeByRecipeIDParams, authInfo runtime.ClientAuthInfoWriter) (*UnfavoriteARecipeByRecipeIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewUnfavoriteARecipeByRecipeIDParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "UnfavoriteARecipeByRecipeID",
		Method:             "DELETE",
		PathPattern:        "/fav-recipe/by-recipe-id/{recipeId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &UnfavoriteARecipeByRecipeIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*UnfavoriteARecipeByRecipeIDOK), nil

}

/*
UnfavoriteRecipeByURL remove3s a favorite recipe entry into the database for a particular recipe
*/
func (a *Client) UnfavoriteRecipeByURL(params *UnfavoriteRecipeByURLParams, authInfo runtime.ClientAuthInfoWriter) (*UnfavoriteRecipeByURLOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewUnfavoriteRecipeByURLParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "UnfavoriteRecipeByUrl",
		Method:             "DELETE",
		PathPattern:        "/fav-recipe/by-recipe-url/{recipe-url}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &UnfavoriteRecipeByURLReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*UnfavoriteRecipeByURLOK), nil

}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
