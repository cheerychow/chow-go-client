// Code generated by go-swagger; DO NOT EDIT.

package fav_recipe

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cheerychow/chow-go-client/models"
)

// FavoriteARecipeReader is a Reader for the FavoriteARecipe structure.
type FavoriteARecipeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FavoriteARecipeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewFavoriteARecipeCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewFavoriteARecipeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewFavoriteARecipeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewFavoriteARecipeCreated creates a FavoriteARecipeCreated with default headers values
func NewFavoriteARecipeCreated() *FavoriteARecipeCreated {
	return &FavoriteARecipeCreated{}
}

/*FavoriteARecipeCreated handles this case with default header values.

Object created.
*/
type FavoriteARecipeCreated struct {
	Payload *models.FavRecipe
}

func (o *FavoriteARecipeCreated) Error() string {
	return fmt.Sprintf("[POST /fav-recipe][%d] favoriteARecipeCreated  %+v", 201, o.Payload)
}

func (o *FavoriteARecipeCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FavRecipe)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFavoriteARecipeBadRequest creates a FavoriteARecipeBadRequest with default headers values
func NewFavoriteARecipeBadRequest() *FavoriteARecipeBadRequest {
	return &FavoriteARecipeBadRequest{}
}

/*FavoriteARecipeBadRequest handles this case with default header values.

Either a recipe id or a recipe url is needed
*/
type FavoriteARecipeBadRequest struct {
	Payload *models.HTTPAPIError
}

func (o *FavoriteARecipeBadRequest) Error() string {
	return fmt.Sprintf("[POST /fav-recipe][%d] favoriteARecipeBadRequest  %+v", 400, o.Payload)
}

func (o *FavoriteARecipeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFavoriteARecipeNotFound creates a FavoriteARecipeNotFound with default headers values
func NewFavoriteARecipeNotFound() *FavoriteARecipeNotFound {
	return &FavoriteARecipeNotFound{}
}

/*FavoriteARecipeNotFound handles this case with default header values.

Recipe doesn't exist.
*/
type FavoriteARecipeNotFound struct {
	Payload *models.HTTPAPIError
}

func (o *FavoriteARecipeNotFound) Error() string {
	return fmt.Sprintf("[POST /fav-recipe][%d] favoriteARecipeNotFound  %+v", 404, o.Payload)
}

func (o *FavoriteARecipeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
