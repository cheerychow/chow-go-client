// Code generated by go-swagger; DO NOT EDIT.

package labels

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cheerychow/go-client/models"
)

// NutrientAbbrevsReader is a Reader for the NutrientAbbrevs structure.
type NutrientAbbrevsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *NutrientAbbrevsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewNutrientAbbrevsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewNutrientAbbrevsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewNutrientAbbrevsOK creates a NutrientAbbrevsOK with default headers values
func NewNutrientAbbrevsOK() *NutrientAbbrevsOK {
	return &NutrientAbbrevsOK{}
}

/*NutrientAbbrevsOK handles this case with default header values.

Description was not specified
*/
type NutrientAbbrevsOK struct {
	Payload []string
}

func (o *NutrientAbbrevsOK) Error() string {
	return fmt.Sprintf("[GET /labels/nutrient-abbrevs][%d] nutrientAbbrevsOK  %+v", 200, o.Payload)
}

func (o *NutrientAbbrevsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNutrientAbbrevsBadRequest creates a NutrientAbbrevsBadRequest with default headers values
func NewNutrientAbbrevsBadRequest() *NutrientAbbrevsBadRequest {
	return &NutrientAbbrevsBadRequest{}
}

/*NutrientAbbrevsBadRequest handles this case with default header values.

Description was not specified
*/
type NutrientAbbrevsBadRequest struct {
	Payload *models.HTTPAPIError
}

func (o *NutrientAbbrevsBadRequest) Error() string {
	return fmt.Sprintf("[GET /labels/nutrient-abbrevs][%d] nutrientAbbrevsBadRequest  %+v", 400, o.Payload)
}

func (o *NutrientAbbrevsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HTTPAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
