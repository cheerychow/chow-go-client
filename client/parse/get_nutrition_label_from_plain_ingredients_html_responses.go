// Code generated by go-swagger; DO NOT EDIT.

package parse

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetNutritionLabelFromPlainIngredientsHTMLReader is a Reader for the GetNutritionLabelFromPlainIngredientsHTML structure.
type GetNutritionLabelFromPlainIngredientsHTMLReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNutritionLabelFromPlainIngredientsHTMLReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetNutritionLabelFromPlainIngredientsHTMLOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetNutritionLabelFromPlainIngredientsHTMLBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetNutritionLabelFromPlainIngredientsHTMLNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetNutritionLabelFromPlainIngredientsHTMLOK creates a GetNutritionLabelFromPlainIngredientsHTMLOK with default headers values
func NewGetNutritionLabelFromPlainIngredientsHTMLOK() *GetNutritionLabelFromPlainIngredientsHTMLOK {
	return &GetNutritionLabelFromPlainIngredientsHTMLOK{}
}

/*GetNutritionLabelFromPlainIngredientsHTMLOK handles this case with default header values.

HTML code for the nutrition label.
*/
type GetNutritionLabelFromPlainIngredientsHTMLOK struct {
	Payload string
}

func (o *GetNutritionLabelFromPlainIngredientsHTMLOK) Error() string {
	return fmt.Sprintf("[POST /parse/nutrition-label/html][%d] getNutritionLabelFromPlainIngredientsHtmlOK  %+v", 200, o.Payload)
}

func (o *GetNutritionLabelFromPlainIngredientsHTMLOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNutritionLabelFromPlainIngredientsHTMLBadRequest creates a GetNutritionLabelFromPlainIngredientsHTMLBadRequest with default headers values
func NewGetNutritionLabelFromPlainIngredientsHTMLBadRequest() *GetNutritionLabelFromPlainIngredientsHTMLBadRequest {
	return &GetNutritionLabelFromPlainIngredientsHTMLBadRequest{}
}

/*GetNutritionLabelFromPlainIngredientsHTMLBadRequest handles this case with default header values.

Description was not specified
*/
type GetNutritionLabelFromPlainIngredientsHTMLBadRequest struct {
	Payload string
}

func (o *GetNutritionLabelFromPlainIngredientsHTMLBadRequest) Error() string {
	return fmt.Sprintf("[POST /parse/nutrition-label/html][%d] getNutritionLabelFromPlainIngredientsHtmlBadRequest  %+v", 400, o.Payload)
}

func (o *GetNutritionLabelFromPlainIngredientsHTMLBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNutritionLabelFromPlainIngredientsHTMLNotFound creates a GetNutritionLabelFromPlainIngredientsHTMLNotFound with default headers values
func NewGetNutritionLabelFromPlainIngredientsHTMLNotFound() *GetNutritionLabelFromPlainIngredientsHTMLNotFound {
	return &GetNutritionLabelFromPlainIngredientsHTMLNotFound{}
}

/*GetNutritionLabelFromPlainIngredientsHTMLNotFound handles this case with default header values.

Description was not specified
*/
type GetNutritionLabelFromPlainIngredientsHTMLNotFound struct {
	Payload string
}

func (o *GetNutritionLabelFromPlainIngredientsHTMLNotFound) Error() string {
	return fmt.Sprintf("[POST /parse/nutrition-label/html][%d] getNutritionLabelFromPlainIngredientsHtmlNotFound  %+v", 404, o.Payload)
}

func (o *GetNutritionLabelFromPlainIngredientsHTMLNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
